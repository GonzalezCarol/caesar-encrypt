const data = [
  {
    numero_casas: 11,
    token: "5806d4f485755b689b5677d1a1b0304ee5c2e606",
    cifrado: "ulgl td ez ulgldnctae hsle nlc td ez nlcape. nsctd sptwxlyy",
    decifrado: "",
    resumo_criptografico: "",
  },
];

const alphabetic = [
  "a",
  "b",
  "c",
  "d",
  "e",
  "f",
  "g",
  "h",
  "i",
  "j",
  "k",
  "l",
  "m",
  "n",
  "o",
  "p",
  "q",
  "r",
  "s",
  "t",
  "u",
  "v",
  "w",
  "x",
  "y",
  "z",
];
/* 
    Caesar decript logic
    quantidadeDeCasas
    quantidadeLetrasAlfabeto = 26
    26%quantidadeLetrasAlfabeto=(quantidadeLetrasAlfabeto+quantidadeDeCasas)%quantidadeLetrasAlfabeto=0
    27%quantidadeLetrasAlfabeto=(quantidadeLetrasAlfabeto+quantidadeDeCasas)%quantidadeLetrasAlfabeto=1
    28%quantidadeLetrasAlfabeto=(quantidadeLetrasAlfabeto+quantidadeDeCasas)%quantidadeLetrasAlfabeto=2
  */

const caesarDecriptyArray = data.map((caesarEncripty) => {
  const decimalPlaces = caesarEncripty.numero_casas;
  const splitedcaesarData = caesarEncripty.cifrado.split("");
  const amountOfLettersAlphab = 26;

  const decriptMessageCaesar = splitedcaesarData.map((whichLetter) => {
    if (alphabetic.includes(whichLetter)) {
      let indexOfWhichLetter =
        (amountOfLettersAlphab +
          alphabetic.indexOf(whichLetter) -
          decimalPlaces) %
        amountOfLettersAlphab;
      return alphabetic[indexOfWhichLetter];
    } else return whichLetter;
  });
  // console.log(decriptMessageCaesar.toLowerCase())
  return decriptMessageCaesar.join("");
});
console.log(caesarDecriptyArray.join(""));
